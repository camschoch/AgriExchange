@model AgriExchange.Models.ViewModels.BlogViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@if (Model.Blogs.Count > 0)
{
    for (int i = 0; i < Model.Blogs.Count; i++)
    {
        <h3>@Model.Blogs[i].Title</h3>
        <h5>@Model.Blogs[i].DatePosted.ToString()</h5>
        if (Model.Tags.Where(x => x.Blog.ID == Model.Blogs[i].ID).ToList().Count > 0)
        {
            <div>
                <h4>Tags: </h4>
                @foreach (var tag in Model.Tags.Where(x => x.Blog.ID == Model.Blogs[i].ID).ToList())
                {
                    <span>@(tag.Tag.Tag + ", ")</span>
                }
            </div>
        }
        <div>
            <p>
                @Model.Blogs[i].Text
            </p>
            @if ((from data in Model.BlogLikes where data.Blog.ID == Model.Blogs[i].ID select data.User.Id).Contains(Model.User.Id))
            {
            <p>@((from data in Model.BlogLikes where data.Blog.ID == Model.Blogs[i].ID select data).ToList().Count) @Ajax.ActionLink("Unlike", "Like", "Blog", new { id = Model.Blogs[i].ID }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onLikeSucces" })</p>
            }
            else
            {
                <p>@((from data in Model.BlogLikes where data.Blog.ID == Model.Blogs[i].ID select data).ToList().Count) @Ajax.ActionLink("Like", "Like", "Blog", new { id = Model.Blogs[i].ID }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onLikeSucces" })</p>
            }
            <p>@Html.ActionLink("Report", "Report", "Blog", new { ID = Model.Blogs[i].ID }, null)</p>
        </div>
        if(Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList().Count > 0)
        {
            for(int j = 0; j < Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList().Count; j++)
            {
                <div>
                    <h4>
                        @(Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList()[j].User.UserName.ToString())
                    </h4>
                    <h5>
                        @(Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList()[j].PostDate.ToString())
                    </h5>
                    <p>
                        @(Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList()[j].Text)
                    </p>
                    @if ((from data in Model.CommentLikes where data.Comment.ID == Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList()[j].ID select data.User.Id).Contains(Model.User.Id))
                    {
                        <p>@((from data in Model.CommentLikes where data.Comment.ID == (from item in Model.Comments where item.Blog.ID == Model.Blogs[i].ID select item).ToList()[j].ID select data).ToList().Count) @Ajax.ActionLink( "Unlike", "PutInBin", "Capture", new {   ID = Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList()[j].ID}, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onLikeSucces" })</p>
                    }
                    else
                    {
                        <p>@((from data in Model.CommentLikes where data.Comment.ID == (from item in Model.Comments where item.Blog.ID == Model.Blogs[i].ID select item).ToList()[j].ID select data).ToList().Count) @Html.ActionLink("Like", "Like", "Comment", new { ID = Model.Comments.Where(z => z.Blog.ID == Model.Blogs[i].ID).ToList()[j].ID })</p>
                    }
                    <p>@Html.ActionLink("Report", "Report", "Comment", new { ID = Model.Blogs[i].ID }, null)</p>
                </div>
            }
        }
        using (Html.BeginForm("Create", "Comment"))
        {
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Comment.Text, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Comment.Text, new { @class = "form-control" })
                </div>
            </div>
            @Html.Hidden("comment.Blog.ID", Model.Blogs[i].ID)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Comment" />
                </div>
            </div>

        }
    }
}
<script src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.9.0.js"></script>

<script>

    var onLikeSuccess = function(result) {
        window.location.reload(true);
    };

 </script>
